#+TITLE: Configuration files

Tangle with 'C-c C-v t'

* Node
#+begin_src js :tangle package.json

#+end_src

* Webpack
#+begin_src js :tangle webpack.config.js
  const path = require('path');
  const HtmlWebpackPlugin = require('html-webpack-plugin');

  module.exports = {
      mode: 'development',
      devtool: 'inline-source-map',
      devServer: {
          host: '0.0.0.0',
          contentBase: './dist'
      },
      entry: './src/index.ts',
      output: {
          path: path.resolve(__dirname, 'dist')
      },
      module: {
          rules: [
              {
                  test: /\.(ttf|woff|eot)$/,
                  loader: 'file-loader',
                  options: {
                      name: '[name].[ext]?[hash]'
                  }
              },
              {
                  test: /\.css$/,
                  use:['style-loader','css-loader'],
                  include: [/node_modules/]
              },
              {
                  test: /\.tsx?$/,
                  use: 'ts-loader',
                  exclude: /node_modules/,
              },
              {
                  test: /\.(png|svg|jpg|jpeg|gif)$/i,	
                  type: 'asset/resource',
              }
	    
          ],
      },
      resolve: {
          extensions: [ '.tsx', '.ts', '.js' ],
      },
      plugins: [
          new HtmlWebpackPlugin({template: 'src/presentation.html'})
      ]
  };

#+end_src


* Typescript
#+begin_src js :tangle tsconfig.json
  {
      "compilerOptions": {
          "outDir": "./dist/",
          "module": "es6",
          "target": "es5",
          "allowJs": true,
          "moduleResolution": "node"
      }
  }
#+end_src
